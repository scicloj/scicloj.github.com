<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0' xmlns:atom='http://www.w3.org/2005/Atom'>
<channel>
<atom:link href='https://scicloj.github.com' rel='self' type='application/rss+xml'/>
<title>
SciCloj
</title>
<link>
https://scicloj.github.com
</link>
<description>
The Clojure scientific hub
</description>
<lastBuildDate>
Tue, 04 Jun 2019 14:04:20 +0300
</lastBuildDate>
<generator>
clj-rss
</generator>
<item>
<guid>
https://scicloj.github.com/posts/2019-05-23-clojure-scientists/
</guid>
<link>
https://scicloj.github.com/posts/2019-05-23-clojure-scientists/
</link>
<title>
Are we scientists yet?
</title>
<description>
&lt;p&gt;The Clojure community is moving a lot lately on the data science front, but we were feeling we needed some organization and more open discussion about these themes. &lt;a href='https://clojureverse.org/t/online-meeting-clojure-data-science/3503'&gt;This is the Clojureverse thread&lt;/a&gt; that started it all. Here we try to collect and record the current state of things, and I would like to stress the fact that this is owned by the community!&lt;/p&gt;&lt;p&gt;The structure of this:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Name of the problem&lt;/strong&gt; - data science is a stack of problems and one &lt;strong&gt;must&lt;/strong&gt; have solutions to all of them to really be productive&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Notable examples&lt;/strong&gt; - what's considered standard nowadays in other languages&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Status&lt;/strong&gt; - the current status of the matter&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Next&lt;/strong&gt; - the next best actions&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;multidimensional&amp;#95;arrays,&amp;#95;linear-algebra&quot;&gt;Multidimensional arrays, Linear-algebra&lt;/h1&gt;&lt;p&gt;Generic computation libraries. Here we should strive for the best: both GPU and CPU capability, multidimensional arrays, broadcasting, etc&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='http://www.numpy.org/'&gt;Numpy&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://deeplearning4j.org/docs/latest/nd4j-overview'&gt;ND4J&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;There are many libraries popping out at various levels of maturity, &lt;strong&gt;some&lt;/strong&gt; of them are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://neanderthal.uncomplicate.org/'&gt;Neanderthal&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tvm-clj'&gt;tvm-clj&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tech.datatype'&gt;tech.datatype&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/hswick/jutsu.matrix'&gt;jutsu.matrix&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/mikera/core.matrix'&gt;core.matrix&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/cailuno/denisovan'&gt;denisovan&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;&lt;p&gt;We probably don't need more libraries in this realm. What would be great next is:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Extended docs&lt;/strong&gt; - Something like https://docs.scipy.org/doc/numpy/index.html&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Tutorials&lt;/strong&gt; - Common use cases, advanced stuff, etc&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Bridges &amp; extensions&lt;/strong&gt; - Libraries and packages connecting these frameworks to ther libraries or extending their functionality&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;plotting&quot;&gt;Plotting&lt;/h1&gt;&lt;p&gt;Plotting is important for both analysis and presentation of results. Thanks to Clojurescript we might probably have an edge over other languages here.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://ggplot2.tidyverse.org/'&gt;ggplot2&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://matplotlib.org/'&gt;matplotlib&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://plot.ly/'&gt;plotly&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;Here there are many libraries as well, &lt;strong&gt;some&lt;/strong&gt; of them are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/jsa-aerial/saite'&gt;Saite&lt;/a&gt;/&lt;a href='https://github.com/jsa-aerial/hanami'&gt;Hanami&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/metasoarous/oz'&gt;Oz&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/JonyEpsilon/gorilla-plot'&gt;gorilla-plot&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/quil/quil'&gt;Quil&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/generateme/cljplot'&gt;cljplot&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;&lt;p&gt;There's a lot of active development in this realm, what would be helpful:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Tutorials&lt;/strong&gt; - Common use cases, advanced stuff, etc&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;geospatial&amp;#95;library&quot;&gt;Geospatial library&lt;/h1&gt;&lt;p&gt;Deal with coordinates on a map.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://geopy.readthedocs.io/en/stable/'&gt;GeoPy&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://mapnik.org/'&gt;mapnik&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;Not much that I'm aware of:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/Factual/geo'&gt;geo&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;&lt;p&gt;This is another area where Clojure could shine thanks to its concurrency model. The fact it would be easy to deal with &lt;a href='https://spark.apache.org/'&gt;Spark&lt;/a&gt; or &lt;a href='https://github.com/onyx-platform/onyx'&gt;Onyx&lt;/a&gt; it's certainly a plus.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Libraries&lt;/strong&gt; - This is an area where we are still lacking&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pluggability&lt;/strong&gt; - It would be very interesting to see libraries built on top of Spark or similar&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;dataframe&amp;#95;or&amp;#95;similar&quot;&gt;Dataframe or similar&lt;/h1&gt;&lt;p&gt;Today's data scientists are used to work with tabular data, we have to deal with it.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://pandas.pydata.org/'&gt;pandas&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://www.r-project.org/'&gt;R&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://arrow.apache.org/'&gt;Arrow&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;The picture has improved lately, but there still isn't consensus.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/incanter/incanter'&gt;incanter&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/sbelak/huri'&gt;huri&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/aria42/koala'&gt;koala&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/ghl3/dataframe'&gt;dataframe&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/ribelo/wombat'&gt;wombat&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tech.ml-base'&gt;tech.ml-base&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/joinr/spork'&gt;spork&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Extended docs&lt;/strong&gt; - Something like https://pandas.pydata.org/pandas-docs/stable/&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Tutorials&lt;/strong&gt; - Common use cases, advanced stuff, etc&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Bridges &amp; extensions&lt;/strong&gt; - Libraries and packages connecting these frameworks to ther libraries or extending their functionality&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;statistics&amp;#95;&amp;&amp;#95;probprog&quot;&gt;Statistics &amp; probprog&lt;/h1&gt;&lt;p&gt;Very important as the base for ML systems and evaluation of models.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://www.scipy.org/'&gt;scipy&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://scikit-learn.org/'&gt;scikit-learn&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://www.r-project.org/'&gt;R&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;There are already many examples:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/MastodonC/kixi.stats'&gt;kixi.stats&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/generateme/fastmath'&gt;fastmath&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/sbelak/huri'&gt;huri&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/uncomplicate/bayadera'&gt;bayadera&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/bigmlcom/sampling'&gt;sampling&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='http://probprog.ml/anglican/index.html'&gt;anglican&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/michaellindon/distributions'&gt;distributions&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/probcomp/metaprob'&gt;metaprob&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;&lt;p&gt;The main building blocks are all here, what we are missing are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Bridges&lt;/strong&gt; - At least some of these libraries should be able to seamlessly communicate among them and with &lt;a href='#dataframe-or-similar'&gt;dataset abstractions&lt;/a&gt; and with &lt;a href='#multidimensional-arrays,linear-algebra'&gt;arrays&lt;/a&gt;. Ideally we would have one of these able to run on GPU either directly (like bayadera) or through &lt;a href='#deep-learning'&gt;MxNet&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Extensions&lt;/strong&gt; - Better and easier abstractions. For instance a function to easily calculate ROC-AUC&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Extended docs&lt;/strong&gt; - Something like https://pandas.pydata.org/pandas-docs/stable/&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Tutorials&lt;/strong&gt; - Common use cases, advanced stuff, etc&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;machine&amp;#95;learning&quot;&gt;Machine learning&lt;/h1&gt;&lt;p&gt;General modeling, the aim should be to have something simple, usable, reliable and with a consistent interface.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://scikit-learn.org/'&gt;scikit-learn&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/dmlc/xgboost'&gt;XGBoost&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;Something is moving lately in this area:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/generateme/fastmath'&gt;fastmath&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/joshuaeckroth/clj-ml/'&gt;clj-ml&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://gitlab.com/alanmarazzi/clj-boost'&gt;clj-boost&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tech.ml'&gt;tech.ml&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tech.xgboost'&gt;tech.xgboost&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/andrewmcloud/consimilo'&gt;consimilo&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;&lt;p&gt;We can still decide wheter we want to pursue an &lt;a href='https://www.r-project.org/'&gt;R&lt;/a&gt; model (with many small libraries) or the &lt;a href='https://scikit-learn.org/'&gt;scikit-learn&lt;/a&gt; way (one big framework with batteries included), the important thing should be to have a common interface to algorithms and utilities. This would be the opposite of what happens in the R world.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Bridges&lt;/strong&gt; - At least some of these libraries should be able to seamlessly communicate among them and with &lt;a href='#dataframe-or-similar'&gt;dataset abstractions&lt;/a&gt; and with &lt;a href='#multidimensional-arrays,linear-algebra'&gt;arrays&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Extensions&lt;/strong&gt; - More models, faster or more memory efficient training and so on&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Extended docs&lt;/strong&gt; - Something like https://scikit-learn.org/stable/index.html&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Tutorials&lt;/strong&gt; - Common use cases, advanced stuff, etc&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;deep&amp;#95;learning&quot;&gt;Deep learning&lt;/h1&gt;&lt;p&gt;Important for computer vision, NLP and other problems.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://www.tensorflow.org/'&gt;TensorFlow&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://pytorch.org/'&gt;PyTorch&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://mxnet.apache.org/'&gt;MXNet&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;We're pretty much covered especially thanks to Carin Meier's work, what can be really improved are docs, examples and tutorials.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://mxnet.apache.org/api/clojure/index.html'&gt;MxNet&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/originrose/cortex'&gt;Cortex&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/hswick/jutsu.ai'&gt;jutsu.ai&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/aria42/flare'&gt;Flare&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Gluon&lt;/strong&gt; - Having access to the &lt;a href='https://github.com/gluon-api/gluon-api'&gt;Gluon API&lt;/a&gt; in MxNet would be very useful&lt;blockquote&gt;&lt;p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h1&gt; None of the lists are to be considered complete, they are just &lt;em&gt;some&lt;/em&gt; examples. Everything is amendable by the community, if you think something is missing, wrong, misplaced or anything else just let the community know! &lt;/p&gt;&lt;/blockquote&gt;
</description>
<author>
Alan Marazzi
</author>
<pubDate>
Thu, 23 May 2019 00:00:00 +0300
</pubDate>
</item>
<item>
<guid>
https://scicloj.github.com/posts/2019-01-21-clojure-scientists/
</guid>
<link>
https://scicloj.github.com/posts/2019-01-21-clojure-scientists/
</link>
<title>
Are we scientists yet?
</title>
<description>
&lt;blockquote&gt;&lt;p&gt; &lt;a href='https://scicloj.github.io/posts/2019-01-21-clojure-scientists/'&gt;Previous version of this post&lt;/a&gt; &lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The Clojure community is moving a lot lately on the data science front, but we were feeling we needed some organization and more open discussion about these themes. &lt;a href='https://clojureverse.org/t/online-meeting-clojure-data-science/3503/65'&gt;This is the Clojureverse thread&lt;/a&gt; that started it all. Here we try to collect and record the current state of things, and I would like to stress the fact that this is owned by the community!&lt;/p&gt;&lt;p&gt;I really like how the Nim community is &lt;a href='https://github.com/nim-lang/needed-libraries/issues/77'&gt;dealing with the same sorts of problems&lt;/a&gt; we're facing, so I'll try the same thing here to foster discussion. We might want to move these things in their own topic in the future or on other platforms, but that's not the point right now.&lt;/p&gt;&lt;p&gt;The structure of this:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Name of the problem&lt;/strong&gt; - data science is a stack of problems and one &lt;strong&gt;must&lt;/strong&gt; have solutions to all of them to really be productive&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Notable examples&lt;/strong&gt; - what's considered standard nowadays in other languages&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Status&lt;/strong&gt; - the current status of the matter&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Forward&lt;/strong&gt; - what is needed moving forward&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;multidimensional&amp;#95;arrays,&amp;#95;linear-algebra&quot;&gt;Multidimensional arrays, Linear-algebra&lt;/h1&gt;&lt;p&gt;Generic computation libraries. Here we should strive for the best: both GPU and CPU capability, multidimensional arrays, broadcasting, etc&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='http://www.numpy.org/'&gt;Numpy&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://deeplearning4j.org/docs/latest/nd4j-overview'&gt;ND4J&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;There are many libraries popping out at various levels of maturity, &lt;strong&gt;some&lt;/strong&gt; of them are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://neanderthal.uncomplicate.org/'&gt;Neanderthal&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tvm-clj'&gt;tvm-clj&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/hswick/jutsu.matrix'&gt;jutsu.matrix&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/mikera/core.matrix'&gt;core.matrix&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/cailuno/denisovan'&gt;denisovan&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;forward&quot;&gt;Forward&lt;/h2&gt;&lt;p&gt;I think we can all agree that this degree of spread is not good, all these libraries represent wasted time and resources that might be spent on moving further other parts of the stack. We should settle on one-two of them and move on.&lt;/p&gt;&lt;h1 id=&quot;plotting&quot;&gt;Plotting&lt;/h1&gt;&lt;p&gt;Plotting is important for both analysis and presentation of results. Thanks to Clojurescript we might probably have an edge over other languages here.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://ggplot2.tidyverse.org/'&gt;ggplot2&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://matplotlib.org/'&gt;matplotlib&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://plot.ly/'&gt;plotly&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;Here there are many libraries as well, **some* of them are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/jsa-aerial/saite'&gt;Saite&lt;/a&gt;/&lt;a href='https://github.com/jsa-aerial/hanami'&gt;Hanami&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/metasoarous/oz'&gt;Oz&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/JonyEpsilon/gorilla-plot'&gt;gorilla-plot&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/quil/quil'&gt;Quil&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;forward&quot;&gt;Forward&lt;/h2&gt;&lt;p&gt;In this area taste is really important so it's more normal to have more spread over different libraries. What we should do is to work on what is already available and make the plotting experience seamless: &lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;clojure&quot;&gt;&amp;#40;bar my-data&amp;#41;
;=&amp;gt; nil
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The result would be a bar chart with reasonable defaults.&lt;/p&gt;&lt;h1 id=&quot;geospatial&amp;#95;library&quot;&gt;Geospatial library&lt;/h1&gt;&lt;p&gt;Deal with coordinates on a map.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://geopy.readthedocs.io/en/stable/'&gt;GeoPy&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://mapnik.org/'&gt;mapnik&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;Not much that I'm aware of:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/Factual/geo'&gt;geo&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;forward&quot;&gt;Forward&lt;/h2&gt;&lt;p&gt;This is another area where Clojure could shine thanks to its concurrency model. The fact it would be easy to deal with &lt;a href='https://spark.apache.org/'&gt;Spark&lt;/a&gt; or &lt;a href='https://github.com/onyx-platform/onyx'&gt;Onyx&lt;/a&gt; it's certainly a plus.&lt;/p&gt;&lt;h1 id=&quot;dataframe&amp;#95;or&amp;#95;similar&quot;&gt;Dataframe or similar&lt;/h1&gt;&lt;p&gt;Today's data scientists are used to work with tabular data, we have to deal with it.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://pandas.pydata.org/'&gt;pandas&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://www.r-project.org/'&gt;R&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://arrow.apache.org/'&gt;Arrow&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;Not good: there are lots of stumps here and there but nothing has ever caught on. Some examples:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/sbelak/huri'&gt;huri&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/aria42/koala'&gt;koala&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tech.ml-base'&gt;tech.ml-base&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;forward&quot;&gt;Forward&lt;/h2&gt;&lt;p&gt;Here I would move on wrapping &lt;a href='https://arrow.apache.org/'&gt;Arrow&lt;/a&gt; which have to potential to become the standard in the recent future, but anything that works is very welcome!&lt;/p&gt;&lt;h1 id=&quot;statistics&amp;#95;&amp;&amp;#95;probprog&quot;&gt;Statistics &amp; probprog&lt;/h1&gt;&lt;p&gt;Very important as the base for ML systems and evaluation of models.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://www.scipy.org/'&gt;scipy&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://scikit-learn.org/'&gt;scikit-learn&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://www.r-project.org/'&gt;R&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;There are already many examples:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/MastodonC/kixi.stats'&gt;kixi.stats&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/generateme/fastmath'&gt;fastmath&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/sbelak/huri'&gt;huri&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/uncomplicate/bayadera'&gt;bayadera&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/bigmlcom/sampling'&gt;sampling&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='http://probprog.ml/anglican/index.html'&gt;anglican&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;forward&quot;&gt;Forward&lt;/h2&gt;&lt;p&gt;What is missing here is the tooling: we need more abstractions over basic functionality. For instance a function to get the ROC-AUC score for model validation.&lt;/p&gt;&lt;p&gt;Also better docs and examples of what is achievable with these libraries.&lt;/p&gt;&lt;h1 id=&quot;machine&amp;#95;learning&quot;&gt;Machine learning&lt;/h1&gt;&lt;p&gt;General modeling, the aim should be to have something simple, usable, reliable and with a consistent interface.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://scikit-learn.org/'&gt;scikit-learn&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/dmlc/xgboost'&gt;XGBoost&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;Something is moving lately in this area:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/generateme/fastmath'&gt;fastmath&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/joshuaeckroth/clj-ml/'&gt;clj-ml&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://gitlab.com/alanmarazzi/clj-boost'&gt;clj-boost&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tech.ml-base'&gt;tech.ml-base&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tech.xgboost'&gt;tech.xgboost&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;forward&quot;&gt;Forward&lt;/h2&gt;&lt;p&gt;As stated earlier either we pursue an &lt;a href='https://www.r-project.org/'&gt;R&lt;/a&gt; model (with many small libraries) or the &lt;a href='https://scikit-learn.org/'&gt;scikit-learn&lt;/a&gt; way (one big framework with batteries included), the important thing should be to have a common interface to algorithms and utilities. This would be the opposite of what happens in the R world.&lt;/p&gt;&lt;h1 id=&quot;deep&amp;#95;learning&quot;&gt;Deep learning&lt;/h1&gt;&lt;p&gt;Important for computer vision, NLP and other problems.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://www.tensorflow.org/'&gt;TensorFlow&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://pytorch.org/'&gt;PyTorch&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://mxnet.apache.org/'&gt;MXNet&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;We're pretty much covered especially thanks to Carin Meier's work, what can be really improved are docs, examples and tutorials.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://mxnet.apache.org/api/clojure/index.html'&gt;MXNet&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/originrose/cortex'&gt;Cortex&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/hswick/jutsu.ai'&gt;jutsu.ai&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/aria42/flare'&gt;Flare&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;forward&quot;&gt;Forward&lt;/h2&gt;&lt;p&gt;Just build on what's already there&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;h1 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h1&gt; None of the lists are to be considered complete, they are just &lt;em&gt;some&lt;/em&gt; examples. Of course these are my opinions, but everything is amendable by the community and I would really love to get a productive discussion about these topics. If you think something is missing, wrong, misplaced or anything else just let the community know!  Yeah, I know about &lt;a href='https://github.com/incanter/incanter'&gt;Incanter&lt;/a&gt;, I didn't mention it on purpose, but if someone thinks that it is current and useful we can surely discuss it :smile: &lt;/p&gt;&lt;/blockquote&gt;
</description>
<author>
Alan Marazzi
</author>
<pubDate>
Mon, 21 Jan 2019 00:00:00 +0200
</pubDate>
</item>
</channel>
</rss>
