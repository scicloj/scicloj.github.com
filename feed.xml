<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0' xmlns:atom='http://www.w3.org/2005/Atom'>
<channel>
<atom:link href='https://scicloj.github.com' rel='self' type='application/rss+xml'/>
<title>
SciCloj
</title>
<link>
https://scicloj.github.com
</link>
<description>
The Clojure scientific hub
</description>
<lastBuildDate>
Fri, 30 Oct 2020 01:28:14 +0200
</lastBuildDate>
<generator>
clj-rss
</generator>
<item>
<guid>
https://scicloj.github.com/posts/2020-10-29-nov-2020-ml-study-meetings/
</guid>
<link>
https://scicloj.github.com/posts/2020-10-29-nov-2020-ml-study-meetings/
</link>
<title>
November 2020 machine learning study meetings
</title>
<description>
&lt;p&gt;The Clojure data science ecosystem is going through changes, and it looks really promising at the moment. To support the coming developments, it is important to learn the current state of the ecosystem, to try it out in different contexts, to think about it, and to discuss its future directions.&lt;/p&gt;&lt;p&gt;Study meetings are one of the places where we will be doing all that.&lt;/p&gt;&lt;p&gt;Around the middle of November, we will meet to study some parts of the emerging stack for &quot;classical&quot; machine learning (as opposed to deep learning).&lt;/p&gt;&lt;p&gt;Below are a few details about the planned sessions. &lt;/p&gt;&lt;p&gt;Please register in advance as much as possible, and let us know if anything changes about your plans. This will help a lot in the preparations.&lt;/p&gt;&lt;p&gt;See you there!&lt;h2&gt;&lt;/h2&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Can I go to any of the meetings?&lt;ul&gt;&lt;li&gt;Yes. Each of the mid-November meetings is self contained. They will all be similar in nature, and may overlap in content. You may join one or more of them, whichever you prefer.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;What should I do in order to participate?&lt;ul&gt;&lt;li&gt;Please fill in the registration form (coming soon) a few days in advance. Please &lt;a href='https://scicloj.github.io/pages/about/#where'&gt;let us know&lt;/a&gt; about any changes in your plans.&lt;/li&gt;&lt;li&gt;Please join the &lt;a href='https://clojurians.zulipchat.com/#narrow/stream/151924-data-science'&gt;#data-science stream of the Clojurians Zulip&lt;/a&gt; and follow the updates there towards the meetings. It would be great if you could present yourself at the &lt;a href='https://clojurians.zulipchat.com/#narrow/stream/151924-data-science/topic/hello'&gt;'hello' topic thread&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;What will happen in the meetings?&lt;ul&gt;&lt;li&gt;We will begin with a short intro to some of the relevant libraries.&lt;/li&gt;&lt;li&gt;Then, participants will be invited to briefly share their screen if they have anything to show, ask or demonstrate.&lt;/li&gt;&lt;li&gt;Then, in the main part of the meeting, we will look into a data problem together and start tackling it. At any stage, someone will be sharing their screen with their REPL session, and the group will think together about the session.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;When will the meetings take place?&lt;ul&gt;&lt;li&gt;https://time.is/1100&lt;i&gt;13&lt;/i&gt;Nov&lt;i&gt;2020&lt;/i&gt;in_UTC/&lt;/li&gt;&lt;li&gt;https://time.is/1600&lt;i&gt;13&lt;/i&gt;Nov&lt;i&gt;2020&lt;/i&gt;in_UTC/&lt;/li&gt;&lt;li&gt;https://time.is/1200&lt;i&gt;14&lt;/i&gt;Nov&lt;i&gt;2020&lt;/i&gt;in_UTC/&lt;/li&gt;&lt;li&gt;https://time.is/1700&lt;i&gt;14&lt;/i&gt;Nov&lt;i&gt;2020&lt;/i&gt;in_UTC/&lt;/li&gt;&lt;li&gt;https://time.is/1400&lt;i&gt;15&lt;/i&gt;Nov&lt;i&gt;2020&lt;/i&gt;in_UTC/&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;How long are the meetings?&lt;ul&gt;&lt;li&gt;Each of the the mid-November study meetings will be 2 hours long.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Are the meetings beginner-friendly?&lt;ul&gt;&lt;li&gt;Not exactly. At the moment, we are studying tools and libraries which are still changing and breaking. Sometimes, they are not completely documented. Looking into them may require an open mind and might not be easy.&lt;/li&gt;&lt;li&gt;However, we do assume that nobody in the meetings is an expert. We will seek clarity and will make an effort to help each other.&lt;/li&gt;&lt;li&gt;After the ecosystem becomes more complete, we will be able to organize workshops which are much more beginner-friendly.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;What knowledge will be assumed?&lt;ul&gt;&lt;li&gt;We will assume basic knowledge of Clojure (say, at least chapters 1,3,4,5 of Daniel Higginbotham's &lt;a href='https://www.braveclojure.com/'&gt;&quot;Clojure for the Brave and True&quot;&lt;/a&gt;).&lt;/li&gt;&lt;li&gt;We will assume some basic understanding of machine learning concepts, mainly around typical settings of supervised learning. If you are not sure about it, we recommend to read &lt;a href='https://en.wikipedia.org/wiki/Machine_learning'&gt;the Wikipedia entry&lt;/a&gt; carefully, and discuss with us anything that you wish to understand better. If you have any doubt, &lt;a href='https://scicloj.github.io/pages/about/#where'&gt;let us talk&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;What platform will we use for the meetings?&lt;ul&gt;&lt;li&gt;We will use Zoom for the video meetings. You will get a calendar invitation with a Zoom link after registration.&lt;/li&gt;&lt;li&gt;We will use the Clojurians Zulip chat for our notes and textual discussions. Here is some recommended background about our use of Zulip: https://scicloj.github.io/pages/chat_streams/&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;What libraries will we study?&lt;ul&gt;&lt;li&gt;According to our tentative plan, we will use &lt;code&gt;tech.ml&lt;/code&gt;, &lt;code&gt;fastmath&lt;/code&gt; and &lt;code&gt;Smile&lt;/code&gt; for machine learning, &lt;code&gt;tablecloth&lt;/code&gt; for data processing, &lt;code&gt;tech.viz&lt;/code&gt; for data visualization, and &lt;code&gt;Notespace&lt;/code&gt; or &lt;code&gt;Oz&lt;/code&gt; for literate programming.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;How can I prepare for the meeting?&lt;ul&gt;&lt;li&gt;We recommend trying out the relevant libraries, playing with them in the context of a data problem, and discussing what you find at Zulip.&lt;/li&gt;&lt;li&gt;We will share some recommended materials towards the meetings. Please follow the Zulip conversations.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
</description>
<author>
Daniel Slutsky
</author>
<pubDate>
Thu, 29 Oct 2020 00:00:00 +0200
</pubDate>
</item>
<item>
<guid>
https://scicloj.github.com/posts/2020-08-26-public-meeting-2020-08-30/
</guid>
<link>
https://scicloj.github.com/posts/2020-08-26-public-meeting-2020-08-30/
</link>
<title>
Preparing to our public meeting on August 30th
</title>
<description>
&lt;p&gt;A lot is happening in the Clojure data science ecosystem. While the infrastructure and tooling are gradually maturing, new libraries and experiments are rising. It seems that we are on a phase transition, and some beautiful things are about to happen.&lt;/p&gt;&lt;p&gt;It is a good time to meet and catch up, hear about active projects and discuss future directions and ways to collaborate.&lt;/p&gt;&lt;p&gt;That is what we will be doing in the &lt;a href='https://twitter.com/scicloj/status/1291845872884625408'&gt;public meeting&lt;/a&gt; on the coming Sunday, August 30th 2020.&lt;/p&gt;&lt;h2 id=&quot;time&quot;&gt;Time&lt;/h2&gt;&lt;p&gt;We will meet at 5pm UTC, for 90m minutes. Please check your time difference from &lt;a href='https://time.is/UTC'&gt;the UTC timezone&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The next public meeting is planned to take on a different hour, more comfortable to the friends in East Asia.&lt;/p&gt;&lt;h2 id=&quot;joining&amp;#95;the&amp;#95;meeting&quot;&gt;Joining the meeting&lt;/h2&gt;&lt;p&gt;Please register in &lt;a href='https://tinyurl.com/y4a2w79g'&gt;the registration form&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;You will get an email with a calendar invitation and a Zoom link.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt; You can also see the calendar event with the Zoom link &lt;a href='https://calendar.google.com/event?action=TEMPLATE&amp;tmeid=NGViazd2cjNhdjNsdG03OXFnczhvOHFhdTkgc2NpY2xvakBt&amp;tmsrc=scicloj%40gmail.com'&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;h2 id=&quot;plan&quot;&gt;Plan&lt;/h2&gt;&lt;p&gt;We will have a sequence of 5min lightning talks, then some discussion.&lt;/p&gt;&lt;p&gt;Below is the tentative plan. Several more friends have mentioned they might speak too, but haven't confirmed yet. If you wish to add your name to the list, please kindly email &lt;a href='mailto:scicloj@gmail.com'&gt;scicloj@gmail.com&lt;/a&gt;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://www.linkedin.com/in/anthony-khong/'&gt;Anthony Khong&lt;/a&gt; will speak about &lt;a href='https://github.com/zero-one-group/geni'&gt;Geni&lt;/a&gt; &amp;ndash; a new Clojure library that wraps &lt;a href='https://spark.apache.org/'&gt;Apache Spark&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;&lt;a href='https://twitter.com/daslu_'&gt;Daniel Slutsky&lt;/a&gt; will share a workflow with some of the new libraries and tools, including &lt;a href='https://github.com/scicloj/tablecloth'&gt;Tablecloth&lt;/a&gt;, &lt;a href='https://github.com/pink-gorilla/gorilla-ui'&gt;Gorilla-UI&lt;/a&gt; and an experimental branch of &lt;a href='https://github.com/scicloj/Notespace'&gt;Notespace&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/jsa-aerial'&gt;Jon Anthony&lt;/a&gt; will present a demonstration of building interactive dashboards with &lt;a href='https://github.com/jsa-aerial/saite'&gt;Saite&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;&lt;a href='https://twitter.com/mtraven'&gt;Michael Travers&lt;/a&gt; will give &lt;a href='https://drive.google.com/file/d/1WSsW6Y9cexKm7n6Ts6QwDC8lgV1-pzdf/view'&gt;a presentation&lt;/a&gt; about a visual query builder for knowledge graphs.&lt;/li&gt;&lt;li&gt;&lt;a href='https://twitter.com/metasoarous'&gt;Christopher Small&lt;/a&gt; will present the work he has been doing on &lt;a href='https://twitter.com/UsePolis'&gt;Polis&lt;/a&gt; analyses with &lt;a href='https://github.com/clj-python/libpython-clj'&gt;Libpython-clj&lt;/a&gt;, the &lt;a href='https://github.com/techascent/tech.ml'&gt;tech.ml&lt;/a&gt; stack, &lt;a href='https://github.com/metasoarous/oz'&gt;Oz&lt;/a&gt; &amp; &lt;a href='https://github.com/clojupyter/clojupyter'&gt;Clojupyter&lt;/a&gt; in a Docker environment.&lt;/li&gt;&lt;li&gt;&lt;a href='https://twitter.com/ontomd'&gt;Sivaram Arabandi&lt;/a&gt; will give a presentation on imprecise data.&lt;/li&gt;&lt;li&gt;&lt;a href='https://twitter.com/replomancer'&gt;Łukasz Kożuchowski&lt;/a&gt; will talk about &lt;a href='https://en.wikipedia.org/wiki/Differential_privacy'&gt;Differential Privacy&lt;/a&gt; in Clojure (a work in progress open source library).&lt;/li&gt;&lt;/ul&gt;
</description>
<author>
Daniel Slutsky
</author>
<pubDate>
Wed, 26 Aug 2020 00:00:00 +0300
</pubDate>
</item>
<item>
<guid>
https://scicloj.github.com/posts/2020-03-18-covid-19-hackathons-announcement/
</guid>
<link>
https://scicloj.github.com/posts/2020-03-18-covid-19-hackathons-announcement/
</link>
<title>
COVID-19 online hackathons I &amp; II
</title>
<description>
&lt;p&gt;Following &lt;a href='../2020-03-17-covid-19-hackathon-planning/'&gt;yesterday's post&lt;/a&gt; suggesting a COVID-19 online hackathon, we got some of reactions at &lt;a href='https://groups.google.com/forum/#!topic/clojure/EvRVhMiPtPg'&gt;the mail group&lt;/a&gt;, &lt;a href='https://www.reddit.com/r/Clojure/comments/fkcf5w/online_clojure_covid19_hackathon/'&gt;the subreddit&lt;/a&gt;, the &lt;a href='https://doodle.com/poll/8imu9dyqmftygihs'&gt;date poll&lt;/a&gt;, and mainly the relevant Zulip &lt;a href='../../pages/chat_streams/#relevant_active_streams'&gt;chat streams&lt;/a&gt;.&lt;/p&gt;&lt;h2 id=&quot;two&amp;#95;hackathons&quot;&gt;Two hackathons&lt;/h2&gt;&lt;p&gt;Seeing that broad interest, we decided to set &lt;strong&gt;two&lt;/strong&gt; dates for online hackathons:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Saturday, March 21st (yes, very close)&lt;/li&gt;&lt;li&gt;Sunday, Match 29th&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The hackathons are not intended to contain all our activity in this area. Before and after them, we will discuss the topic at the &lt;a href='https://clojurians.zulipchat.com/#narrow/stream/227504-covid-19'&gt;#covid-19 stream&lt;/a&gt; of the Clojurians Zulip. &lt;/p&gt;&lt;h2 id=&quot;joining&quot;&gt;Joining&lt;/h2&gt;&lt;p&gt;To attend the Hackathons, we ask you to present yourself under the &lt;a href='https://clojurians.zulipchat.com/#narrow/stream/227504-covid-19/topic/hello'&gt;#covid-19 / hello&lt;/a&gt; topic, tell which hackathon(s) you wish to attend, and follow the announcements under the &lt;a href='https://clojurians.zulipchat.com/#narrow/stream/227504-covid-19/topic/announcements'&gt;#covid-19 / announcements&lt;/a&gt; topic.&lt;/p&gt;&lt;p&gt;If you wish to be involved in organizing, moderating, assisting others or influencing the agenda, it would be great to mention that when presenting yourself.&lt;/p&gt;&lt;p&gt;If you have any doubts regarding participaction, have a look at the Q&amp;A on &lt;a href='../2020-03-17-covid-19-hackathon-planning/'&gt;yesterday's post&lt;/a&gt;, or please ask under the &lt;a href='https://clojurians.zulipchat.com/#narrow/stream/227504-covid-19/topic/hackathon.20q.26a'&gt;#covid-19 / hackathon q&amp;a&lt;/a&gt; topic.  &lt;/p&gt;&lt;h2 id=&quot;rough&amp;#95;plan&quot;&gt;Rough plan&lt;/h2&gt;&lt;p&gt;&lt;del&gt;The Hackathons will begin in the European morning, and end in the American afternoon.&lt;/del&gt; &lt;/p&gt;&lt;p&gt;&lt;del&gt;At some points through the day, we will have video meetings of 30-60 minutes, but most of the activity will take place in text chat.&lt;/del&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Update: Both hackathons will begin at 2pm UTC, and last 4 hours. Some parts of the meeting will be in video, and some other parts &amp;ndash; in text chat.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;We will split into teams, and each team will discuss things among itself, and sometimes with everybody, through the chat.&lt;/p&gt;&lt;p&gt;For more details, please follow the &lt;a href='https://clojurians.zulipchat.com/#narrow/stream/227504-covid-19/topic/announcements'&gt;#covid-19 / announcements&lt;/a&gt; topic.&lt;/p&gt;&lt;p&gt;See you there, and be safe &amp;ndash; the scicloj organizing team&lt;/p&gt;
</description>
<author>
Teodor Heggelund and Daniel Slutsky
</author>
<pubDate>
Wed, 18 Mar 2020 00:00:00 +0200
</pubDate>
</item>
<item>
<guid>
https://scicloj.github.com/posts/2020-03-17-covid-19-hackathon-planning/
</guid>
<link>
https://scicloj.github.com/posts/2020-03-17-covid-19-hackathon-planning/
</link>
<title>
Planning a COVID-19 online hackathon
</title>
<description>
&lt;p&gt;The scicloj community is organizing an online hackathon for studying COVID-19 data.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Please mark your preferred dates for the hackathon &lt;a href='https://doodle.com/poll/8imu9dyqmftygihs'&gt;here&lt;/a&gt; (yes/no/if-need-be).&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;During one day, we will study together the COVID-19 story, using global and local data, in Clojure.&lt;/p&gt;&lt;p&gt;We have several goals in mind:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;learn about the pandemic&lt;/li&gt;&lt;li&gt;try out the emerging Clojure data science stack&lt;/li&gt;&lt;li&gt;bring the community together&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Towards the meeting we will discuss possible topics and data sources at the &lt;a href='https://clojurians.zulipchat.com/#narrow/stream/227504-covid-19'&gt;#covid-19 stream&lt;/a&gt; of the Clojurians Zulip.&lt;/p&gt;&lt;p&gt;See the Q&amp;A below for some more details.&lt;/p&gt;&lt;p&gt;Wishes for good health and better times! &amp;ndash; the scicloj organizing team&lt;/p&gt;&lt;h2 id=&quot;q&amp;a&quot;&gt;Q&amp;A&lt;/h2&gt;&lt;p&gt;Q: What background is assumed?&lt;/p&gt;&lt;p&gt;A: We'll assume that you feel comfortable with reading and writing Clojure.&lt;/p&gt;&lt;p&gt;Q: I like Clojure, but want to use it combined with additional tools and languages. Is that OK?&lt;/p&gt;&lt;p&gt;A: Sure, that would be great.&lt;/p&gt;&lt;p&gt;Q: Do you assume any additional scientific background?&lt;/p&gt;&lt;p&gt;A: No prior background in science, probability or statistics is required. We want the hackathon to be accessible to all who participate, and welcome questions that help explain the data, and how we can understand it.&lt;/p&gt;&lt;p&gt;Q: I can only attend for a few hours. Is it ok?&lt;/p&gt;&lt;p&gt;A: Yes.&lt;/p&gt;&lt;p&gt;Q: I have a friend who is curious about studying these data and does not know Clojure. Can I invite my friend?&lt;/p&gt;&lt;p&gt;A: It would be great to invite your friend, as long as you find a way to collaborate (e.g., connect your Clojure code to their work; do some pair-coding; or just involve them in the thinking and theoretical analysis).&lt;/p&gt;
</description>
<author>
Teodor Heggelund and Daniel Slutsky
</author>
<pubDate>
Tue, 17 Mar 2020 00:00:00 +0200
</pubDate>
</item>
<item>
<guid>
https://scicloj.github.com/posts/2020-03-07-guix-jupyter/
</guid>
<link>
https://scicloj.github.com/posts/2020-03-07-guix-jupyter/
</link>
<title>
Meeting Video: Guix-Jupyter with Ludovic Courtès
</title>
<description>
&lt;p&gt;A lot has been happening at Scicloj in the last few weeks, but now we finally managed to edit and publish the video from a meeting we've had at January 9th.&lt;/p&gt;&lt;p&gt;It was a special meeting, as we the topic was something out of the ususal Clojure scope: Guix-Jupyter reproducible notebooks.&lt;/p&gt;&lt;p&gt;Kindly, Ludovic Courtès of the Guix community agreed to give a talk at this scicloj web meeting, and have a discussion with us.&lt;/p&gt;&lt;p&gt;Here are &lt;a href='https://youtu.be/GFyv3qUXHpU'&gt;the video&lt;/a&gt; and &lt;a href='https://github.com/scicloj/scicloj/blob/master/resources/slides/scicloj-guix-jupyter.pdf'&gt;the slides&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Now, let us discuss what it is about.&lt;/p&gt;&lt;h2 id=&quot;guix&quot;&gt;Guix&lt;/h2&gt;&lt;p&gt;&lt;a href='https://guix.gnu.org/'&gt;GNU Guix&lt;/a&gt; is a unique toolbox for Linux package management, as well as a Linux distribution. It is built on principles of Functional Programming, inspired by &lt;a href='https://nixos.org/nix/'&gt;Nix&lt;/a&gt;, and is written and configurable in GNU Guile, a dialect of Scheme. Functional package management has beautiful implications in enabling systems which are secure, transparent and reproducible.&lt;/p&gt;&lt;p&gt;Recently, the Guix community started the &lt;a href='https://gitlab.inria.fr/guix-hpc'&gt;Guix-HPC&lt;/a&gt; project, that brings these principles to the field of scientific computing. Specifically, the &lt;a href='https://gitlab.inria.fr/guix-hpc/guix-kernel'&gt;Guix Jupyter kernel&lt;/a&gt; allows Jupyter users to specify their precise software dependencies as Guix dependencies.&lt;/p&gt;&lt;p&gt;Ludovic, who is a research engineer at &lt;a href='https://www.inria.fr/fr/centre-inria-bordeaux-sud-ouest'&gt;Inria Bordeaux Sud-Ouest&lt;/a&gt;, has been active both in academic research and in libre software. Some of his involvement has been in the Guile, Guix and Guix-HPC projects.&lt;/p&gt;&lt;p&gt;At the scicloj, we are minded about various aspects of reproducible deployment and reproducible research. Of course, we also love Functional Programming and curious about Scheme. So, a whole meeting about Guix-Jupyter would naturally be inspiring and joyful for us.&lt;/p&gt;&lt;h2 id=&quot;the&amp;#95;meeting&quot;&gt;The meeting&lt;/h2&gt;&lt;p&gt;In the meeting we have had several participants from the Guix community and from the Scicloj community.&lt;/p&gt;&lt;p&gt;It was the first time for us to use an open-source video-conferencing tool, &lt;a href='https://jitsi.org/'&gt;Jitsi&lt;/a&gt;. This was a little step outside of our comfort zone, and so some small parts of the discussion are missing in the recorded video.&lt;/p&gt;&lt;p&gt;We began with a talk, where Ludovic gave a general introduction to Guix and reprocibility, as well as a demonstration of Guix-Jupyter.&lt;/p&gt;&lt;p&gt;Then, we moved to an open discussion. A nice conversation emerged, with three of the participants: Martin Kavalar, the CEO of &lt;a href='http://nextjournal.com/'&gt;Nextjournal&lt;/a&gt;, a web notebook built on principles of immutability and reproducibility; Klaus Harbo, who is, among other things, the maintainer of &lt;a href='https://github.com/clojupyter/clojupyter'&gt;Clojupyter&lt;/a&gt;, a Clojure Jupyter kernel; and Daniel Szmulewicz, who has been studying various dialects of Scheme, and builds Clojure development tools on top of the Maven ecosystem.&lt;/p&gt;&lt;p&gt;We discussed some technical aspects and usability aspects of Guix, as well as some conceptual questions. Interesting dilemmas arise when the Guix approach towards libre software, pure functions, reproducibility, security and transparency is used alongside other pieces of software. We also discussed some issues of possibly bringing Clojure ecosystem more fully into the Guix ecosystem. &lt;/p&gt;&lt;h2 id=&quot;thanks!&quot;&gt;Thanks!&lt;/h2&gt;&lt;p&gt;Many thanks to Ludovic and the other Guix community members who kindly joined us at Scicloj for this meeting!&lt;/p&gt;&lt;p&gt;See you on the next meetings.&lt;/p&gt;
</description>
<author>
Daniel Slutsky
</author>
<pubDate>
Sat, 07 Mar 2020 00:00:00 +0200
</pubDate>
</item>
<item>
<guid>
https://scicloj.github.com/posts/2020-03-05-rgsoc2020/
</guid>
<link>
https://scicloj.github.com/posts/2020-03-05-rgsoc2020/
</link>
<title>
Data Science in Clojure at Rails Girls Summer of Code
</title>
<description>
&lt;p&gt;In this post I wish to write briefly about the &lt;a href='https://teams.railsgirlssummerofcode.org/projects/369-data-science-in-clojure'&gt;&quot;data science in clojure&quot;&lt;/a&gt; project in Rails Girls Summer of Code 2020.&lt;/p&gt;&lt;p&gt;Hoping to encourage people to join as &lt;a href='https://railsgirlssummerofcode.org/students/application/'&gt;students&lt;/a&gt; or &lt;a href='https://railsgirlssummerofcode.org/guide/coaching/'&gt;coaches&lt;/a&gt;, I will try to argue why (in my opinion) it is important to the healthy growth of the clojure data science ecosystem: not only by actively addressing our goal to create a welcoming community, but also by creating a continuous process of experimentation and reflection about the usability of the emerging stack.&lt;h2&gt;&lt;/h2&gt;&lt;/p&gt;&lt;p&gt;For several years, &lt;a href='https://railsgirlssummerofcode.org/'&gt;Rails Girls Summer of Code&lt;/a&gt; has been organizing Summer of Code projects, where students of underrepresented groups (specifically women and non-binary people) work on open source projects for a monthly stipend during the summer. The explicit main goal is to bring more diversity into Open Source.&lt;/p&gt;&lt;p&gt;Two Clojure projects were accepted to RGSoC for 2020:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://teams.railsgirlssummerofcode.org/projects/318-kaocha'&gt;Kaocha&lt;/a&gt;, submitted by &lt;a href='https://github.com/plexus'&gt;Arne Brasseur&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://teams.railsgirlssummerofcode.org/projects/369-data-science-in-clojure'&gt;data science in clojure&lt;/a&gt;, that I have submitted in dialogue with the scicloj organizing team&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Here, we will talk about the latter.&lt;h2&gt;&lt;/h2&gt;&lt;/p&gt;&lt;p&gt;At scicloj, diversity is an explicit goal as well. Some of the other goals we have been discussing recently are making it easy to get involved and contribute, experimenting with the tools we are building and seeking a cohesive grammer for data science in Clojure. The RGSoC project will be addressing all of these goals.&lt;/p&gt;&lt;p&gt;As &lt;a href='https://clojureverse.org/t/online-meeting-clojure-data-science/3503/17'&gt;argued&lt;/a&gt; by Chris Nuernberger in one of the discussions that anticipated the creation of scicloj, a case-driven approach is an excellent way to continuously verify that we are creating a useful stack. Indeed, this principle has been affecting the growth of the clojure data science ecosystem in the last year. Writing &lt;a href='https://scicloj.github.io/pages/reading/#tutorials'&gt;tutorials&lt;/a&gt; has been our main way to learn about the state of the stack, and realize what may still be missing. At the same time, it has been a way to share what was already becoming possible.&lt;/p&gt;&lt;p&gt;Following this principle, the first component of the &quot;data science in clojure&quot; RGSoC project will &lt;strong&gt;looking into data problems&lt;/strong&gt;. The team will choose various old &amp; new data science problems, and solve them in Clojure. &lt;/p&gt;&lt;p&gt;This will teach us about different aspects of usability of the emerging stack, not only in terms of functionality, but also in terms of clarity, simplicity and ease. In this way, the team will take an extremely important role in the ongoing discussion of scicloj regarding our goals and priorities.&lt;/p&gt;&lt;p&gt;To make this role explicit, the second component of the project will be &lt;strong&gt;discussing and prioritizing the arising issues and ideas&lt;/strong&gt; together with the library maintainers. Selected issues will be solved by the maintainers, involving the team as much as possible in the technical process.&lt;/p&gt;&lt;p&gt;The project statement focuses on &lt;a href='https://github.com/scicloj/clojisr'&gt;ClojisR&lt;/a&gt; - a &lt;a href='https://en.wiktionary.org/wiki/جسر'&gt;jisr&lt;/a&gt; between Clojure and R, which is one of the pieces of the emerging stack. Being one of the library authors allowed me to submit it for the RGSoc project. However, the project does leave some room for expansion, and we will be happy to include other relevant libraries, as long as it is desired by the teams and by the maintainers of those libraries.&lt;/p&gt;&lt;p&gt;As commented recently by Teodor Heggelund, writing example walkthroughs can be done in different ways: some can be just about experimentation, and others can be about education &amp;ndash; that is, carefully teaching a certain practice or idea. In this RGSoC project, we seek both.&lt;/p&gt;&lt;p&gt;Therefore, the third component of the project would be choosing selected examples, organizing them and &lt;strong&gt;making a coherent story&lt;/strong&gt; out of them, in the form of an open source book.&lt;/p&gt;&lt;p&gt;Often, discussing and solving specific problems can be a source for inspiration for broader reasoning about our journey. This kind of reflection is an important part of our work.&lt;/p&gt;&lt;p&gt;Thus, in the forth component of the RGSoc project, the team members will be &lt;strong&gt;engaging in general community discussions&lt;/strong&gt;, sharing their thoughts and experiences.&lt;h2&gt;&lt;/h2&gt;&lt;/p&gt;&lt;p&gt;There are many ways to help out, and the two main ones are joining join the project as &lt;a href='https://railsgirlssummerofcode.org/students/application/'&gt;students&lt;/a&gt; or &lt;a href='https://railsgirlssummerofcode.org/guide/coaching/'&gt;coaches&lt;/a&gt;. These are not small commitments. They require some careful thought and dedication. But I strongly believe that they may have huge impact on our journey, in unique and beautiful ways.&lt;/p&gt;&lt;p&gt;Scicloj has been going through a long, spiral path of growing the ecosystem, that will eventually converge to a simple, stable, flexible and friendly environment for data science. On our way towards that goal, fresh opinions and diverse points of view are extremely important. I strongly believe that the RGSoC will allow scicloj this kind of refreshment. That is one of the reasons I am so hopeful about this project.&lt;/p&gt;
</description>
<author>
Daniel Slutsky
</author>
<pubDate>
Thu, 05 Mar 2020 00:00:00 +0200
</pubDate>
</item>
<item>
<guid>
https://scicloj.github.com/posts/2019-10-18-data-wishes/
</guid>
<link>
https://scicloj.github.com/posts/2019-10-18-data-wishes/
</link>
<title>
Clojure and data: wishes, problems, and ideas
</title>
<description>
&lt;p&gt;On Sunday afternoon, Sep. 29th 2019, we had a meeting at the 8-bit-sheep office of Sami at &lt;a href='https://maria.io/about/'&gt;Maria 01&lt;/a&gt;, Helsinki. One hour earlier, Konrad just finished participating in a 24h &lt;a href='https://www.meetup.com/Lamia-hackathons/events/264053121/'&gt;opendata hackathon&lt;/a&gt;. We were all tired and emotionally affected by &lt;a href='https://clojutre.org/2019/'&gt;ClojuTRE&lt;/a&gt;, that just ended on Friday.&lt;/p&gt;&lt;p&gt;We ended up having a long conversation about our goals and wishes, as individuals and as parts of a community. A lot of personal stories and wild ideas were running in the room. Later Sami took us on a ride around Helsinki, which opened our tired minds even wider.&lt;/p&gt;&lt;p&gt;This blog post is a brief summary of those parts of the conversation that relate to building the Clojure data science community. Hopefully, the list of problems and ideas that we offer here can serve as an actionable suggestion, as well as a beginning of a wider discussion. &lt;/p&gt;&lt;p&gt;For the actionable part, you are invited to jump to the &lt;a href='#goals'&gt;Goals&lt;/a&gt; section below. Hopefully, the parts preceding it are useful too.&lt;/p&gt;&lt;p&gt;Sami Kallinen, Konrad Kühne, Daniel Slutsky&lt;/p&gt;&lt;h2 id=&quot;tl;dr&quot;&gt;TL;DR&lt;/h2&gt;&lt;p&gt;We discussed some of the challenges of an expanding community, and suggested some concrete projects to tackle some of these challenges:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Tooling. Have more meetings to learn and discuss existing Clojure tooling projects, with the focus of the question of friendliness to data analysts.&lt;/li&gt;&lt;li&gt;Experimental meetings. Have a variety of experimental meetings that expose Clojure to other communities.&lt;/li&gt;&lt;li&gt;Learning materials. Consider writing a 4Clojure4Data project.&lt;/li&gt;&lt;li&gt;Team building. Start thinking about a study group with friends from other communities.&lt;/li&gt;&lt;li&gt;Face-to-face. Check the option of organizing a big meetup near ClojureD.&lt;/li&gt;&lt;li&gt;Discussion. Keep discussing the broader dilemmas suggested here.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;wishes&quot;&gt;Wishes&lt;/h2&gt;&lt;p&gt;Sami and Daniel shared the wish for Clojure to become more accessible to wider groups of people, especially beginners, in particular data analysts.&lt;/p&gt;&lt;p&gt;Konrad added the wish to have more community activity around data analysis (rather than just building tools and libraries); to develop Datalog as a way of expressing queries; and to promote activity around open source and open data.&lt;/p&gt;&lt;h2 id=&quot;personal&amp;#95;experiences&quot;&gt;Personal experiences&lt;/h2&gt;&lt;p&gt;Sami shared some of his experience in group facilitation, and described different models of learning meetings, with different variations around the Coding Dojo idea.&lt;/p&gt;&lt;p&gt;Konrad told about his development efforts in the ecosystem around Datalog, and about the challenge of creating cooperation across different groups working on Datalog-related libraries.&lt;/p&gt;&lt;p&gt;Sami and Konrad shared similar experiences about building professional groups that are dispersed across different locations, and mentioned the challenges of keeping group communication continuous in such conditions.&lt;/p&gt;&lt;p&gt;Daniel told about the attempt to create a local Clojure data science workshop. The workshop began with some fun talks and discussions, and a diverse group of speakers and participants. However, it failed to actually create a continuous learning experience. Gradually, it converged to a less diverse group of people.&lt;/p&gt;&lt;p&gt;We also discussed the growth of the Scicloj community so far. It began as an intimate, small group of people who were very involved and all influenced the thought process and directions. The group tried to expand, and gradually more people started taking part in the process. However, in the current dynamics, many members do not get to practically influence the goals and directions of the group.&lt;/p&gt;&lt;h2 id=&quot;challenges&quot;&gt;Challenges&lt;/h2&gt;&lt;h3 id=&quot;accessibility&quot;&gt;Accessibility&lt;/h3&gt;&lt;p&gt;Once central question we discussed was whether Clojure could become a beginner-friendly tool in the field of data analysis.&lt;/p&gt;&lt;p&gt;Will we reach a state where newcomers can easily find clear Clojure paths to solve the data problems that they face? &lt;/p&gt;&lt;h3 id=&quot;convergence&quot;&gt;Convergence&lt;/h3&gt;&lt;p&gt;A related problem is the so-called &lt;a href='http://www.winestockwebdesign.com/Essays/Lisp_Curse.html'&gt;Lisp Curse&lt;/a&gt;, where many individuals and groups tend to enjoy the flexibility of the language and create their own flavours of methods and solutions, thereby often diverging from widely-accepted practices. Of course, this also means lots of creativity, and many opportunities for beautiful things to happen. However, being able to converge to common practices might be important.&lt;/p&gt;&lt;p&gt;For actual beginner-friendliness to arise, probably some clear main paths would rather be marked. Moreover, convergence around popular, well accepted ways seems essential to allow for the critical mass that enables enough questions and answers, enough tutorials, etc.&lt;/p&gt;&lt;p&gt;Also, for the ecosystem to get far enough as a platform for data science, it seems important for libraries to be able to build upon each other. &lt;/p&gt;&lt;h3 id=&quot;cooperation&quot;&gt;Cooperation&lt;/h3&gt;&lt;p&gt;One expression of that tendency, not to converge to common practices, can be seen in the fact that it seems uncommon for Clojure libraries to use abstractions defined by others. &lt;/p&gt;&lt;p&gt;In the field of data science and scientific computing, there have been some opposite tendencies.&lt;/p&gt;&lt;p&gt;One notable case has been the use of the &lt;a href='https://github.com/mikera/core.matrix'&gt;core.matrix&lt;/a&gt; abstractions in several libraries (and the communication around those in the &lt;a href='https://groups.google.com/forum/#!forum/numerical-clojure'&gt;Numerical Clojure forum&lt;/a&gt;). There are now some tendencies to replace the core.matrix set of protocols by those of &lt;a href='https://github.com/techascent/tech.datatype'&gt;tech.datatype&lt;/a&gt; and &lt;a href='https://github.com/techascent/tech.ml.dataset'&gt;tech.ml.dataset&lt;/a&gt; (ironically exercising The Curse once again, but inspired by the ideas and lessons of the core.matrix story). In the Scicloj activity and &lt;a href='https://clojurians.zulipchat.com/#narrow/stream/151924-data-science/'&gt;discussions&lt;/a&gt; around these, we intend to use them as a common basis for some of the emerging libraries. Indeed, the explicit &lt;a href='https://clojureverse.org/t/online-meeting-clojure-data-science/3503/17'&gt;intention&lt;/a&gt; behind the 'tech' stack is to support building bridges in our ecosystem, as well as bridges across ecosystems.&lt;/p&gt;&lt;p&gt;A related example of libraries building upon each other is a collection of libraries written by a single author, Tomasz Sulej. &lt;a href='https://github.com/generateme/fastmath'&gt;Fastmath&lt;/a&gt;, &lt;a href='https://github.com/Clojure2D/clojure2d'&gt;Clojure2d&lt;/a&gt;, &lt;a href='https://github.com/generateme/cljplot'&gt;Cljplot&lt;/a&gt;, &lt;a href='https://github.com/generateme/fitdistr'&gt;Fitdistr&lt;/a&gt;, &lt;a href='https://github.com/generateme/inferme'&gt;Inferme&lt;/a&gt;, etc. are very much interrelated.&lt;/p&gt;&lt;p&gt;Another cooperation potential is around Datalog. Here, Konrad tells about the intention to create cooperation across the different groups developing Datalog libraries, and about the actual &lt;a href='https://lambdaforge.io/2019/09/20/datahike-release-0.2.0.html'&gt;efforts&lt;/a&gt; to decouple &lt;a href='https://github.com/lambdaforge/datalog-parser'&gt;some parts&lt;/a&gt; of Datahike, so that they can be useful in a wider context.&lt;/p&gt;&lt;p&gt;One potential cooperation that has not become fruitful yet is the discussion of document formats. Martin Kavalar of Nextjournal &lt;a href='https://clojurians.zulipchat.com/#narrow/stream/187445-scicloj-tutorials/topic/Runnable.20tutorials'&gt;suggessted&lt;/a&gt; to have some dialogue about the definition of import/export formats for various literate programming tools. This is relevant to several projects that have some notion of document-with-code, such as &lt;a href='https://gdeer81.github.io/marginalia/'&gt;Marginalia&lt;/a&gt;, &lt;a href='http://gorilla-repl.org/'&gt;Gorilla-REPL&lt;/a&gt;, &lt;a href='https://www.maria.cloud'&gt;Maria.cloud&lt;/a&gt;, &lt;a href='https://github.com/clojupyter/clojupyter'&gt;Clojupyter&lt;/a&gt;, &lt;a href='https://github.com/jsa-aerial/saite'&gt;Saite&lt;/a&gt; and &lt;a href='https://github.com/metasoarous/oz'&gt;Oz&lt;/a&gt;. Some conversation has started, without conclusion yet.&lt;/p&gt;&lt;h3 id=&quot;growth&quot;&gt;Growth&lt;/h3&gt;&lt;p&gt;How can we reach out to more people? What would actually encourage people to get involved? And what paths can we offer people to get involved?&lt;/p&gt;&lt;h3 id=&quot;diversity&quot;&gt;Diversity&lt;/h3&gt;&lt;p&gt;Diversity in our community is a goal in itself.&lt;/p&gt;&lt;p&gt;It is also related to several of the other problems mentioned here.&lt;/p&gt;&lt;p&gt;As Jack Rusher commented in one of our ClojuTRE chats, experienced Clojurians are not so much in a position to see what is actually necessary to make Clojure easy to non-experienced Clojurians. If we wish to have a team that works on making things accessible, it ought to be more diverse.&lt;/p&gt;&lt;h3 id=&quot;democracy&quot;&gt;Democracy&lt;/h3&gt;&lt;p&gt;Democracy can mean different things, in particular in the context of open-source communities.&lt;/p&gt;&lt;p&gt;In our context, we should ask at least that the goals, the directions and the spirit of our community will be effectively influenced by its members, and be effectively transparent to them. This should be true not only for those who are privileged to be involved every day. It is important that those who are limited in time and are less involved will be influential and well-informed too.&lt;/p&gt;&lt;p&gt;Our current experience shows that intentions, declarations and efforts are not always enough to achieve that.&lt;/p&gt;&lt;p&gt;Power relations exist, even if we do not wish them to. They are partly caused by the fact that community members are different in their availability of free time, their background, their convenience about language, their involvement in related processes in the past, their timezone, all kinds of glass ceilings, etc. Such differences sometimes affect the ability of members to affect certain processes, and even to be aware of them.&lt;/p&gt;&lt;p&gt;Of course, the question of power relations becomes even more relevant and problematic when we seek to expand our team with people who are of different backgrounds, and specifically, of little Clojure background.&lt;/p&gt;&lt;p&gt;We want to be a living community, not a small group that drives things by inertia.&lt;/p&gt;&lt;h3 id=&quot;community&quot;&gt;Community&lt;/h3&gt;&lt;p&gt;Very much related to the above question of power and participation, is the question whether community members actually feel that the community is theirs, and that it is a thing they are building.&lt;/p&gt;&lt;p&gt;In the case of Scicloj, so far about 20 people have agreed to be part of the organizing team and be minded about the community building story. But even for those who have actively decided to be in that standpoint, is the door actually open? Is it convenient enough to participate? And does the general atmosphere allow everybody to feel at home?&lt;/p&gt;&lt;h3 id=&quot;team&amp;#95;building&quot;&gt;Team building&lt;/h3&gt;&lt;p&gt;We wish to create a more diverse team of people who will be involved in our agenda.&lt;/p&gt;&lt;p&gt;Of course, it might be problematic to diversify the team, if we are not willing to expand the agenda itself.&lt;/p&gt;&lt;p&gt;Currently, we are a group of Clojurians who dream of bringing Clojure to people of different backgrounds. As we realize, to actually grasp this dream and understand the problems around it, we need people of different backgrounds in the team. But let us remember, that a more diverse team may of course have more diverse dreams. Keeping the goal concentrated around one culture, with the team containing several other cultures, might create an imbalance and unwanted power relations across members.&lt;/p&gt;&lt;p&gt;How should we tackle this paradox? Can we create a diverse team of members who work together towards a common agenda, where the agenda is balanced with respect to the backgrounds, dreams and wishes of team members?&lt;/p&gt;&lt;p&gt;And can we create such a team in a way that would at least be related to our current, narrower goals as Clojurians?&lt;/p&gt;&lt;h3 id=&quot;continuity&quot;&gt;Continuity&lt;/h3&gt;&lt;p&gt;Processes are happening in parallel. Libraries are developed; ideas are raised and wait to be implemented; meetings are planned; series of meetings begin, stop and continue; discussions begin, stop and continue; decisions wait to be made.&lt;/p&gt;&lt;p&gt;Some of these take time. There is always a danger to lose some threads, and also to lose some of the members involved, as they may not be available when things actually continue.&lt;/p&gt;&lt;p&gt;Our job is to glue things together, so that the activities, their fruit and the people around them will keep going, as much as possible.&lt;/p&gt;&lt;p&gt;The answer to this may be partly about careful knowledge management and task management. But it is also about relationships between people.&lt;/p&gt;&lt;p&gt;Here we might draw some lessons from Sami's and Konrad's experience in building managing groups of people divided across multiple locations. As Sami says, it is important for team members have to actually look into each other's eyes once in a while. Even maintaining that is a challenge.&lt;/p&gt;&lt;h3 id=&quot;meeting&amp;#95;up&quot;&gt;Meeting up&lt;/h3&gt;&lt;p&gt;This brings us to the following question: how can community members meet?&lt;/p&gt;&lt;p&gt;Face-to-face meetings are important. Local communities are important too. Connecting across localities is important too.&lt;/p&gt;&lt;h2 id=&quot;goals&quot;&gt;Goals&lt;/h2&gt;&lt;p&gt;As a way to cope with the challenges discussed above, we offer the following concrete goals.&lt;/p&gt;&lt;h3 id=&quot;better&amp;#95;ecosystem&quot;&gt;Better ecosystem&lt;/h3&gt;&lt;p&gt;This has been and will be discussed in length elsewhere. But let us mention it, at least: we agree that there is a lot to be built on the technical side, until Clojure actually becomes friendly and comfortable for beginners.&lt;/p&gt;&lt;h3 id=&quot;tooling&quot;&gt;Tooling&lt;/h3&gt;&lt;p&gt;Another topic that would be discussed elsewhere is the creation of beginner-friendly tooling.&lt;/p&gt;&lt;p&gt;&lt;a href='https://www.maria.cloud'&gt;Maria.cloud&lt;/a&gt; is an example of a project of this kind of spirit, but at the moment it does not target specifically data analysts. &lt;a href='https://rstudio.com'&gt;Rstudio&lt;/a&gt; could be another possible direction. Several of the other emerging tools, such as &lt;a href='https://github.com/clojupyter/clojupyter'&gt;Clojupyter&lt;/a&gt;, &lt;a href='https://github.com/jsa-aerial/saite'&gt;Saite&lt;/a&gt; and &lt;a href='https://github.com/metasoarous/oz'&gt;Oz&lt;/a&gt;, can hopefully also go in that direction and gradually offer transparency and ease to beginners.&lt;/p&gt;&lt;p&gt;We suggest at least to create some more learning and discussion around these existing projects, while stressing the explicit goal of making things friendly for data analysts.&lt;/p&gt;&lt;h3 id=&quot;experimental&amp;#95;meetings&quot;&gt;Experimental meetings&lt;/h3&gt;&lt;p&gt;We need to constantly challenge ourselves and the ecosystem we are building: How accessible is it? Where are the main obstacles? What could be done to improve? To do that, we need to expose ourselves, and to expose Clojure, to diverse groups of people.&lt;/p&gt;&lt;p&gt;We suggest to start a series of meetings that will experiment with different ways of doing that. Following Sami's experience in similar situations (such as teaching groups of young people to program), we discussed different variations of such meetings:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;tutorials about data analysis with clojure&lt;/li&gt;&lt;li&gt;facilitated discussions&lt;/li&gt;&lt;li&gt;&quot;Just open a REPL&quot; and play with some data&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Different formats of group coding could be used. Variating on the idea of &quot;coding Dojo&quot;, typically there is one &quot;driver&quot; with the REPL or editor, and one or more &quot;navigators&quot;, who say what is to be done. One may also think about multiple people remotely affecting the same REPL or editor.&lt;/p&gt;&lt;p&gt;Different combinations of online and physical meetings might be considered. One possible idea is to conduct several concurrent local meetups in different locations, with an online communication between them.&lt;/p&gt;&lt;p&gt;Some meetings can be somewhat internal community meetings; other can reach out and invite curious people who are willing to hear. &lt;/p&gt;&lt;p&gt;One possibility would be to create a series of meetings that build up some body of knowledge. Another mode would be of singular meetings, that may touch a topic without continuation.&lt;/p&gt;&lt;h3 id=&quot;learning&amp;#95;materials&amp;#95;for&amp;#95;data&amp;#95;analysts&quot;&gt;Learning materials for data analysts&lt;/h3&gt;&lt;p&gt;We need to create materials that will allow for more-or-less independent learning, as well as for efficient teaching.&lt;/p&gt;&lt;p&gt;One suggestion is &quot;4Clojure4Data&quot; &amp;ndash; something like &lt;a href='https://github.com/4clojure/4clojure'&gt;4Clojure&lt;/a&gt;, but with data analysis problems.&lt;/p&gt;&lt;h3 id=&quot;team&amp;#95;building:&amp;#95;a&amp;#95;study&amp;#95;group&quot;&gt;Team building: a study group&lt;/h3&gt;&lt;p&gt;As mentioned in the challenges above, we wish to create a diverse team working towards some common agenda, balanced around the backgrounds, dreams and wishes of its members; and we wish that team to be at least related to our own, narrower wishes.&lt;/p&gt;&lt;p&gt;One format we suggest to try in this direction is a study group: a forum of people of several backgrounds (say, R, Julia and Lisp in terms of programming languages), who go on a long-term journey to study some topic together.&lt;/p&gt;&lt;p&gt;One possible topic could be a comparative study of languages (say, meeting to analyse some data, and doing it in more than one way).&lt;/p&gt;&lt;p&gt;Another possible topic could be something that is relevant to everybody, but is maybe less known to most of them. The field of probabilistic programming could be a good choice.&lt;/p&gt;&lt;h3 id=&quot;face-to-face&quot;&gt;Face-to-face&lt;/h3&gt;&lt;p&gt;We suggest to organize face-to-face meetups of the community.&lt;/p&gt;&lt;p&gt;We actually tried that with a &lt;a href='https://www.meetup.com/Helsinki-Clojure-Meetup/events/264887242/'&gt;meetup&lt;/a&gt; the day before ClojuTRE, with the kind help of the Clojure Helsinki meetup group, the ClojuTRE organizers and the host Emblica.&lt;/p&gt;&lt;p&gt;Now, we wish to have something longer, broader, and more carefully planned.&lt;/p&gt;&lt;p&gt;We suggest to plan a 1-day meetup close to one of the upcoming Clojure conferences, and encourage the Clojure data science community to arrive on that day. &lt;/p&gt;&lt;p&gt;Probably, taking into account the locations of most people currently involved, we need to try that once in Europe and once in the US. One of the close-but-not-too-close opportunities is &lt;a href='https://clojured.de'&gt;ClojureD&lt;/a&gt;, on Feb. 29th, 2020.&lt;/p&gt;&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;&lt;p&gt;Here are the concrete projects we are suggesting at the moment.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Tooling. Have more meetings to learn and discuss existing Clojure tooling projects, with the focus of the question of friendliness to data analysts.&lt;/li&gt;&lt;li&gt;Experimental meetings. Have a variety of experimental meetings that expose Clojure to other communities.&lt;/li&gt;&lt;li&gt;Learning materials. Consider writing a 4Clojure4Data project.&lt;/li&gt;&lt;li&gt;Team building. Start thinking about a study group with friends from other communities.&lt;/li&gt;&lt;li&gt;Face-to-face. Check the option of organizing a big meetup near ClojureD.&lt;/li&gt;&lt;li&gt;Discussion. Keep discussing the broader dilemmas suggested here.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;&lt;p&gt;Very few days after ClojuTRE, Helsinki finally got some snow. Some of us were already too far to feel it, and could only hear about it through the Slack channel.&lt;/p&gt;&lt;p&gt;In the few days around the conference, people could feel and see each other. Many important little conversations took place. Most of them cannot be written in blog posts, but have probably had their effects in other ways.&lt;/p&gt;&lt;p&gt;In this rant we tried to capture some of the thoughts of one conversation.&lt;/p&gt;&lt;p&gt;To us, it was an opportunity to experience how important and transformative a face-to-face meeting can be.&lt;/p&gt;&lt;p&gt;Let us hope we can now somehow continue the discussion in a wider forum, across continents, climates and timezones.&lt;/p&gt;&lt;h2 id=&quot;recommended&amp;#95;reading&quot;&gt;Recommended reading&lt;/h2&gt;&lt;p&gt;We wish to thank Daniel Szmulewicz for recommending to look into Pieter Hintjens' writings. In particular, the ideas presented in &lt;a href='http://hintjens.com/blog:117'&gt;Building Online Communities&lt;/a&gt; may trigger some thought around the dilemmas we are discussing here.&lt;/p&gt;
</description>
<author>
Sami Kallinen, Konrad Kühne, Daniel Slutsky
</author>
<pubDate>
Fri, 18 Oct 2019 00:00:00 +0300
</pubDate>
</item>
<item>
<guid>
https://scicloj.github.com/posts/2019-05-23-clojure-scientists/
</guid>
<link>
https://scicloj.github.com/posts/2019-05-23-clojure-scientists/
</link>
<title>
Are we scientists yet?
</title>
<description>
&lt;blockquote&gt;&lt;p&gt; &lt;a href='https://scicloj.github.io/posts/2019-01-21-clojure-scientists/'&gt;Previous version of this post&lt;/a&gt; &lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The Clojure community is moving a lot lately on the data science front, but we were feeling we needed some organization and more open discussion about these themes. &lt;a href='https://clojureverse.org/t/online-meeting-clojure-data-science/3503'&gt;This is the Clojureverse thread&lt;/a&gt; that started it all. Here we try to collect and record the current state of things, and I would like to stress the fact that this is owned by the community!&lt;/p&gt;&lt;p&gt;The structure of this:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Name of the problem&lt;/strong&gt; - data science is a stack of problems and one &lt;strong&gt;must&lt;/strong&gt; have solutions to all of them to really be productive&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Notable examples&lt;/strong&gt; - what's considered standard nowadays in other languages&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Status&lt;/strong&gt; - the current status of the matter&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Next&lt;/strong&gt; - the next best actions&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;multidimensional&amp;#95;arrays,&amp;#95;linear-algebra&quot;&gt;Multidimensional arrays, Linear-algebra&lt;/h1&gt;&lt;p&gt;Generic computation libraries. Here we should strive for the best: both GPU and CPU capability, multidimensional arrays, broadcasting, etc&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='http://www.numpy.org/'&gt;Numpy&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://deeplearning4j.org/docs/latest/nd4j-overview'&gt;ND4J&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;There are many libraries popping out at various levels of maturity, &lt;strong&gt;some&lt;/strong&gt; of them are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://neanderthal.uncomplicate.org/'&gt;Neanderthal&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tvm-clj'&gt;tvm-clj&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tech.datatype'&gt;tech.datatype&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/hswick/jutsu.matrix'&gt;jutsu.matrix&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/mikera/core.matrix'&gt;core.matrix&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/cailuno/denisovan'&gt;denisovan&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;&lt;p&gt;We probably don't need more libraries in this realm. What would be great next is:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Extended docs&lt;/strong&gt; - Something like https://docs.scipy.org/doc/numpy/index.html&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Tutorials&lt;/strong&gt; - Common use cases, advanced stuff, etc&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Bridges &amp; extensions&lt;/strong&gt; - Libraries and packages connecting these frameworks to ther libraries or extending their functionality&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;plotting&quot;&gt;Plotting&lt;/h1&gt;&lt;p&gt;Plotting is important for both analysis and presentation of results. Thanks to Clojurescript we might probably have an edge over other languages here.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://ggplot2.tidyverse.org/'&gt;ggplot2&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://matplotlib.org/'&gt;matplotlib&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://plot.ly/'&gt;plotly&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;Here there are many libraries as well, &lt;strong&gt;some&lt;/strong&gt; of them are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/jsa-aerial/saite'&gt;Saite&lt;/a&gt;/&lt;a href='https://github.com/jsa-aerial/hanami'&gt;Hanami&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/metasoarous/oz'&gt;Oz&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/JonyEpsilon/gorilla-plot'&gt;gorilla-plot&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/quil/quil'&gt;Quil&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/generateme/cljplot'&gt;cljplot&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;&lt;p&gt;There's a lot of active development in this realm, what would be helpful:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Tutorials&lt;/strong&gt; - Common use cases, advanced stuff, etc&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;geospatial&amp;#95;library&quot;&gt;Geospatial library&lt;/h1&gt;&lt;p&gt;Deal with coordinates on a map.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://geopy.readthedocs.io/en/stable/'&gt;GeoPy&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://mapnik.org/'&gt;mapnik&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;There's something in this realm, mostly dated:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/Factual/geo'&gt;geo&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/jsofra/clj-jts'&gt;clj-jts&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/sunng87/cljts'&gt;cljts&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://clojars.org/forma/mapnik-jni'&gt;mapnik-jni&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;&lt;p&gt;This is another area where Clojure could shine thanks to its concurrency model. The fact it would be easy to deal with &lt;a href='https://spark.apache.org/'&gt;Spark&lt;/a&gt; or &lt;a href='https://github.com/onyx-platform/onyx'&gt;Onyx&lt;/a&gt; it's certainly a plus in case you have big data, while for smaller things parallel Clojure might be enough and speed up pipelines considerably.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Libraries&lt;/strong&gt; - This is an area where we are still lacking&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pluggability&lt;/strong&gt; - It would be very interesting to see libraries built on top of Spark or similar&lt;/li&gt;&lt;li&gt;&lt;strong&gt;New things&lt;/strong&gt; - Tooling in this space is very primitive even for more mainstream languages, people most of the time end up with bash scripts doing most of the work and gluing stuff together. This realm is a possible win for Clojure if we're able to come up with better solutions than other languages&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;dataframe&amp;#95;or&amp;#95;similar&quot;&gt;Dataframe or similar&lt;/h1&gt;&lt;p&gt;Today's data scientists are used to work with tabular data, we have to deal with it.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://pandas.pydata.org/'&gt;pandas&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://www.r-project.org/'&gt;R&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://arrow.apache.org/'&gt;Arrow&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;The picture has improved lately, but there still isn't consensus.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/incanter/incanter'&gt;incanter&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/sbelak/huri'&gt;huri&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/aria42/koala'&gt;koala&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/ghl3/dataframe'&gt;dataframe&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/ribelo/wombat'&gt;wombat&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tech.ml-base'&gt;tech.ml-base&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/joinr/spork'&gt;spork&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Extended docs&lt;/strong&gt; - Something like https://pandas.pydata.org/pandas-docs/stable/&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Tutorials&lt;/strong&gt; - Common use cases, advanced stuff, etc&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Bridges &amp; extensions&lt;/strong&gt; - Libraries and packages connecting these frameworks to ther libraries or extending their functionality&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;graphs&quot;&gt;Graphs&lt;/h1&gt;&lt;p&gt;Graphs can smartly and efficiently solve many problems, most of the time a well thought and built graph can substitute much more complex solutions&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/Microsoft/GraphEngine'&gt;GraphEngine&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://neo4j.com/'&gt;neo4j&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='http://www.i3s.unice.fr/~hogie/software/index.php?name=grph'&gt;grph&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/orientechnologies/orientdb'&gt;orientdb&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;The state of things is pretty good and it makes sense considering the native Clojure data structures and the nature of graphs&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/gorillalabs/neo4j-clj'&gt;neo4j-clj&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/7bridges-eu/clj-odbp'&gt;clj-odbp&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/aysylu/loom'&gt;loom&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/Engelberg/ubergraph'&gt;ubergraph&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/7bridges-eu/corallo'&gt;corallo&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;&lt;p&gt;Graphs are mostly a solved problem, but only lately they are starting to be used extensively and there are many improvements that can be achieved in distributing graphs&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Extend&lt;/strong&gt; - Considering that &lt;a href='https://github.com/Microsoft/GraphEngine'&gt;GraphEngine&lt;/a&gt; runs on the CLR it should be possible (and very interesting) to get a Clojure API&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Tutorials&lt;/strong&gt; - Let's show people the power of weilding graphs and Clojure together!&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;statistics&amp;#95;&amp;&amp;#95;probprog&quot;&gt;Statistics &amp; probprog&lt;/h1&gt;&lt;p&gt;Very important as the base for ML systems, simulations and data analytics.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://www.scipy.org/'&gt;scipy&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://scikit-learn.org/'&gt;scikit-learn&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://www.r-project.org/'&gt;R&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/tensorflow/probability'&gt;TensorFlow probability&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;There are already many examples:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/MastodonC/kixi.stats'&gt;kixi.stats&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/generateme/fastmath'&gt;fastmath&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/sbelak/huri'&gt;huri&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/uncomplicate/bayadera'&gt;bayadera&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/bigmlcom/sampling'&gt;sampling&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='http://probprog.ml/anglican/index.html'&gt;anglican&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/michaellindon/distributions'&gt;distributions&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/probcomp/metaprob'&gt;metaprob&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;&lt;p&gt;The main building blocks are all here, what we are missing are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Bridges&lt;/strong&gt; - At least some of these libraries should be able to seamlessly communicate among them and with &lt;a href='#dataframe-or-similar'&gt;dataset abstractions&lt;/a&gt; and with &lt;a href='#multidimensional-arrays,linear-algebra'&gt;arrays&lt;/a&gt;. Ideally we would have one of these able to run on GPU either directly (like bayadera) or through &lt;a href='#deep-learning'&gt;MxNet&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Extensions&lt;/strong&gt; - Better and easier abstractions. For instance a function to easily calculate ROC-AUC&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Extended docs&lt;/strong&gt; - Something like https://pandas.pydata.org/pandas-docs/stable/&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Tutorials&lt;/strong&gt; - Common use cases, advanced stuff, etc&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Bayesian extensions&lt;/strong&gt; - There's still nothing with gradient-based algorithms such as Hamiltonian Monte Carlo, it would be really cool to get something like &lt;a href='https://github.com/tensorflow/probability'&gt;TensorFlow probability&lt;/a&gt; in the &lt;a href='https://mxnet.apache.org/api/clojure/index.html'&gt;MxNet&lt;/a&gt; realm&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;machine&amp;#95;learning&quot;&gt;Machine learning&lt;/h1&gt;&lt;p&gt;General modeling, the aim should be to have something simple, usable, reliable and with a consistent interface.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://scikit-learn.org/'&gt;scikit-learn&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/dmlc/xgboost'&gt;XGBoost&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;Something is moving lately in this area:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/generateme/fastmath'&gt;fastmath&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/joshuaeckroth/clj-ml/'&gt;clj-ml&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://gitlab.com/alanmarazzi/clj-boost'&gt;clj-boost&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tech.ml'&gt;tech.ml&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tech.xgboost'&gt;tech.xgboost&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/andrewmcloud/consimilo'&gt;consimilo&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;&lt;p&gt;We can still decide wether we want to pursue an &lt;a href='https://www.r-project.org/'&gt;R&lt;/a&gt; model (with many small libraries) or the &lt;a href='https://scikit-learn.org/'&gt;scikit-learn&lt;/a&gt; way (one big framework with batteries included), the important thing should be to have a common interface to algorithms and utilities. &lt;/p&gt;&lt;p&gt;Such interface would be the opposite of what happens in the R world, where developers and researchers are more free to deliver their ideas (R is usually the first language to get implementations of new algorithms), but at the same time the cognitive overhead for users is pretty high.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Bridges&lt;/strong&gt; - At least some of these libraries should be able to seamlessly communicate among them and with &lt;a href='#dataframe-or-similar'&gt;dataset abstractions&lt;/a&gt; and with &lt;a href='#multidimensional-arrays-linear-algebra'&gt;arrays&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Extensions&lt;/strong&gt; - More models, faster or more memory efficient training and so on&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Extended docs&lt;/strong&gt; - Something like https://scikit-learn.org/stable/index.html&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Tutorials&lt;/strong&gt; - Common use cases, advanced stuff, etc&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;nlp&quot;&gt;NLP&lt;/h1&gt;&lt;p&gt;Natural Language Processing is at the bleeding edge at the moment, but Clojure is lagging behind at the moment.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://radimrehurek.com/gensim/'&gt;gensim&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://spacy.io/'&gt;spacy&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://www.nltk.org/'&gt;nltk&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;There are mainly 2 libraries dealing with these things at the moment, and one is currently looking for maintainers:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/dakrone/clojure-opennlp'&gt;clojure-opennlp&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/clojurenlp/core'&gt;clojurenlp&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/fekr/postagga'&gt;postagga&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://nakkaya.com/vision.html'&gt;vision&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;&lt;p&gt;It might very well be that all we need is a couple of very thorough and dedicated libraries, but we're not there yet&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Maintain&lt;/strong&gt; - &lt;code&gt;clojurenlp&lt;/code&gt; is currently looking for maintainers, get in touch with them if you're interested&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Extend&lt;/strong&gt; - increase the functionality and the performance&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;image&amp;#95;processing&quot;&gt;Image processing&lt;/h1&gt;&lt;p&gt;Before doing anything with CNNs you have to read, process and transform images. The state of things here is much better than for many of the other sections!&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://scikit-image.org/'&gt;scikit-image&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://opencv.org/'&gt;opencv&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;We're basically ready to do anything we want with images!&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/apache/incubator-mxnet/tree/master/contrib/clojure-package'&gt;MxNet&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tech.opencv'&gt;tech.opencv&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/boechat107/eye-boof'&gt;eye-boof&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/mikera/imagez'&gt;imagez&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;deep&amp;#95;learning&quot;&gt;Deep learning&lt;/h1&gt;&lt;p&gt;Important for computer vision, NLP and other problems.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://www.tensorflow.org/'&gt;TensorFlow&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://pytorch.org/'&gt;PyTorch&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://mxnet.apache.org/'&gt;MxNet&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;We're pretty much covered especially thanks to Carin Meier's work, what can be really improved are docs, examples and tutorials.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://mxnet.apache.org/api/clojure/index.html'&gt;MxNet&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/originrose/cortex'&gt;Cortex&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/hswick/jutsu.ai'&gt;jutsu.ai&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/aria42/flare'&gt;Flare&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Gluon&lt;/strong&gt; - Having access to the &lt;a href='https://github.com/gluon-api/gluon-api'&gt;Gluon API&lt;/a&gt; in MxNet would be very useful&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt; &lt;strong&gt;Disclaimer&lt;/strong&gt;  None of the lists are to be considered complete, they are just &lt;em&gt;some&lt;/em&gt; examples. Everything is amendable by the community, if you think something is missing, wrong, misplaced or anything else just let the community know! &lt;/p&gt;&lt;/blockquote&gt;
</description>
<author>
Alan Marazzi
</author>
<pubDate>
Thu, 23 May 2019 00:00:00 +0300
</pubDate>
</item>
<item>
<guid>
https://scicloj.github.com/posts/2019-01-21-clojure-scientists/
</guid>
<link>
https://scicloj.github.com/posts/2019-01-21-clojure-scientists/
</link>
<title>
Are we scientists yet?
</title>
<description>
&lt;p&gt;The Clojure community is moving a lot lately on the data science front, but we were feeling we needed some organization and more open discussion about these themes. &lt;a href='https://clojureverse.org/t/online-meeting-clojure-data-science/3503/65'&gt;This is the Clojureverse thread&lt;/a&gt; that started it all. Here we try to collect and record the current state of things, and I would like to stress the fact that this is owned by the community!&lt;/p&gt;&lt;p&gt;I really like how the Nim community is &lt;a href='https://github.com/nim-lang/needed-libraries/issues/77'&gt;dealing with the same sorts of problems&lt;/a&gt; we're facing, so I'll try the same thing here to foster discussion. We might want to move these things in their own topic in the future or on other platforms, but that's not the point right now.&lt;/p&gt;&lt;p&gt;The structure of this:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Name of the problem&lt;/strong&gt; - data science is a stack of problems and one &lt;strong&gt;must&lt;/strong&gt; have solutions to all of them to really be productive&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Notable examples&lt;/strong&gt; - what's considered standard nowadays in other languages&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Status&lt;/strong&gt; - the current status of the matter&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Forward&lt;/strong&gt; - what is needed moving forward&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;multidimensional&amp;#95;arrays,&amp;#95;linear-algebra&quot;&gt;Multidimensional arrays, Linear-algebra&lt;/h1&gt;&lt;p&gt;Generic computation libraries. Here we should strive for the best: both GPU and CPU capability, multidimensional arrays, broadcasting, etc&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='http://www.numpy.org/'&gt;Numpy&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://deeplearning4j.org/docs/latest/nd4j-overview'&gt;ND4J&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;There are many libraries popping out at various levels of maturity, &lt;strong&gt;some&lt;/strong&gt; of them are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://neanderthal.uncomplicate.org/'&gt;Neanderthal&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tvm-clj'&gt;tvm-clj&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/hswick/jutsu.matrix'&gt;jutsu.matrix&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/mikera/core.matrix'&gt;core.matrix&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/cailuno/denisovan'&gt;denisovan&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;forward&quot;&gt;Forward&lt;/h2&gt;&lt;p&gt;I think we can all agree that this degree of spread is not good, all these libraries represent wasted time and resources that might be spent on moving further other parts of the stack. We should settle on one-two of them and move on.&lt;/p&gt;&lt;h1 id=&quot;plotting&quot;&gt;Plotting&lt;/h1&gt;&lt;p&gt;Plotting is important for both analysis and presentation of results. Thanks to Clojurescript we might probably have an edge over other languages here.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://ggplot2.tidyverse.org/'&gt;ggplot2&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://matplotlib.org/'&gt;matplotlib&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://plot.ly/'&gt;plotly&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;Here there are many libraries as well, **some* of them are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/jsa-aerial/saite'&gt;Saite&lt;/a&gt;/&lt;a href='https://github.com/jsa-aerial/hanami'&gt;Hanami&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/metasoarous/oz'&gt;Oz&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/JonyEpsilon/gorilla-plot'&gt;gorilla-plot&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/quil/quil'&gt;Quil&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;forward&quot;&gt;Forward&lt;/h2&gt;&lt;p&gt;In this area taste is really important so it's more normal to have more spread over different libraries. What we should do is to work on what is already available and make the plotting experience seamless: &lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;clojure&quot;&gt;&amp;#40;bar my-data&amp;#41;
;=&amp;gt; nil
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The result would be a bar chart with reasonable defaults.&lt;/p&gt;&lt;h1 id=&quot;geospatial&amp;#95;library&quot;&gt;Geospatial library&lt;/h1&gt;&lt;p&gt;Deal with coordinates on a map.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://geopy.readthedocs.io/en/stable/'&gt;GeoPy&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://mapnik.org/'&gt;mapnik&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;Not much that I'm aware of:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/Factual/geo'&gt;geo&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;forward&quot;&gt;Forward&lt;/h2&gt;&lt;p&gt;This is another area where Clojure could shine thanks to its concurrency model. The fact it would be easy to deal with &lt;a href='https://spark.apache.org/'&gt;Spark&lt;/a&gt; or &lt;a href='https://github.com/onyx-platform/onyx'&gt;Onyx&lt;/a&gt; it's certainly a plus.&lt;/p&gt;&lt;h1 id=&quot;dataframe&amp;#95;or&amp;#95;similar&quot;&gt;Dataframe or similar&lt;/h1&gt;&lt;p&gt;Today's data scientists are used to work with tabular data, we have to deal with it.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://pandas.pydata.org/'&gt;pandas&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://www.r-project.org/'&gt;R&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://arrow.apache.org/'&gt;Arrow&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;Not good: there are lots of stumps here and there but nothing has ever caught on. Some examples:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/sbelak/huri'&gt;huri&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/aria42/koala'&gt;koala&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tech.ml-base'&gt;tech.ml-base&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;forward&quot;&gt;Forward&lt;/h2&gt;&lt;p&gt;Here I would move on wrapping &lt;a href='https://arrow.apache.org/'&gt;Arrow&lt;/a&gt; which have to potential to become the standard in the recent future, but anything that works is very welcome!&lt;/p&gt;&lt;h1 id=&quot;statistics&amp;#95;&amp;&amp;#95;probprog&quot;&gt;Statistics &amp; probprog&lt;/h1&gt;&lt;p&gt;Very important as the base for ML systems and evaluation of models.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://www.scipy.org/'&gt;scipy&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://scikit-learn.org/'&gt;scikit-learn&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://www.r-project.org/'&gt;R&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;There are already many examples:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/MastodonC/kixi.stats'&gt;kixi.stats&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/generateme/fastmath'&gt;fastmath&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/sbelak/huri'&gt;huri&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/uncomplicate/bayadera'&gt;bayadera&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/bigmlcom/sampling'&gt;sampling&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='http://probprog.ml/anglican/index.html'&gt;anglican&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;forward&quot;&gt;Forward&lt;/h2&gt;&lt;p&gt;What is missing here is the tooling: we need more abstractions over basic functionality. For instance a function to get the ROC-AUC score for model validation.&lt;/p&gt;&lt;p&gt;Also better docs and examples of what is achievable with these libraries.&lt;/p&gt;&lt;h1 id=&quot;machine&amp;#95;learning&quot;&gt;Machine learning&lt;/h1&gt;&lt;p&gt;General modeling, the aim should be to have something simple, usable, reliable and with a consistent interface.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://scikit-learn.org/'&gt;scikit-learn&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/dmlc/xgboost'&gt;XGBoost&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;Something is moving lately in this area:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/generateme/fastmath'&gt;fastmath&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/joshuaeckroth/clj-ml/'&gt;clj-ml&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://gitlab.com/alanmarazzi/clj-boost'&gt;clj-boost&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tech.ml-base'&gt;tech.ml-base&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/techascent/tech.xgboost'&gt;tech.xgboost&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;forward&quot;&gt;Forward&lt;/h2&gt;&lt;p&gt;As stated earlier either we pursue an &lt;a href='https://www.r-project.org/'&gt;R&lt;/a&gt; model (with many small libraries) or the &lt;a href='https://scikit-learn.org/'&gt;scikit-learn&lt;/a&gt; way (one big framework with batteries included), the important thing should be to have a common interface to algorithms and utilities. This would be the opposite of what happens in the R world.&lt;/p&gt;&lt;h1 id=&quot;deep&amp;#95;learning&quot;&gt;Deep learning&lt;/h1&gt;&lt;p&gt;Important for computer vision, NLP and other problems.&lt;/p&gt;&lt;h2 id=&quot;notable&amp;#95;examples&quot;&gt;Notable examples&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://www.tensorflow.org/'&gt;TensorFlow&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://pytorch.org/'&gt;PyTorch&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://mxnet.apache.org/'&gt;MXNet&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;status&quot;&gt;Status&lt;/h2&gt;&lt;p&gt;We're pretty much covered especially thanks to Carin Meier's work, what can be really improved are docs, examples and tutorials.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://mxnet.apache.org/api/clojure/index.html'&gt;MXNet&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/originrose/cortex'&gt;Cortex&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/hswick/jutsu.ai'&gt;jutsu.ai&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/aria42/flare'&gt;Flare&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;forward&quot;&gt;Forward&lt;/h2&gt;&lt;p&gt;Just build on what's already there&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;h1 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h1&gt; None of the lists are to be considered complete, they are just &lt;em&gt;some&lt;/em&gt; examples. Of course these are my opinions, but everything is amendable by the community and I would really love to get a productive discussion about these topics. If you think something is missing, wrong, misplaced or anything else just let the community know!  Yeah, I know about &lt;a href='https://github.com/incanter/incanter'&gt;Incanter&lt;/a&gt;, I didn't mention it on purpose, but if someone thinks that it is current and useful we can surely discuss it :smile: &lt;/p&gt;&lt;/blockquote&gt;
</description>
<author>
Alan Marazzi
</author>
<pubDate>
Mon, 21 Jan 2019 00:00:00 +0200
</pubDate>
</item>
</channel>
</rss>
